apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "molgenis-armadillo.fullname" . }}
  labels:
{{ include "molgenis-armadillo.labels" . | indent 4 }}
spec:
  strategy:
    type: Recreate
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "molgenis-armadillo.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "molgenis-armadillo.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "molgenis-armadillo.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.server.image.repository }}:{{ .Values.server.image.tag }}"
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
          - name: audit-pv
            mountPath: /app/logs
          env:
            - name: MINIO_URL
              value: http://{{ include "call-nested" (list $ "minio" "minio.fullname") }}
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "call-nested" (list $ "minio" "minio.fullname") }}
                  key: accesskey
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "call-nested" (list $ "minio" "minio.fullname") }}
                  key: secretkey
{{- if index .Values "molgenis-rserve" "enabled" }}
            - name: RSERVE_HOST
              value: {{ include "call-nested" (list $ "molgenis-rserve" "molgenis-rserve.fullname") }}
            - name: RSERVE_PORT
              value: {{ index .Values "molgenis-rserve" "service" "port" | quote }}
{{- end }}              
            - name: SPRING_SECURITY_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "molgenis-armadillo.fullname" . }}
                  key: adminpassword
            - name: DATASHIELD_OPTIONS_DATASHIELD_SEED
              valueFrom:
                secretKeyRef:
                  name: {{ include "molgenis-armadillo.fullname" . }}
                  key: seed
            - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_OPAQUE_CLIENTID
              valueFrom:
                configMapKeyRef:
                  name: server-config
                  key: client_id
            - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUERURI
              valueFrom:
                configMapKeyRef:
                  name: server-config
                  key: issuer_uri
            - name: SPRING_SECURITY_USER_NAME
              valueFrom:
                configMapKeyRef:
                  name: "server-config"
                  key: adminusername
            - name: SPRING_APPLICATION_JSON
              valueFrom:
                configMapKeyRef:
                  name: "server-config"
                  key: "application.json"
          livenessProbe:
            initialDelaySeconds: 30
            httpGet:
              path: /actuator/health
              port: http
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: http
          resources:
            {{- toYaml .Values.server.resources | nindent 12 }}
      {{- if .Values.server.filebeat.enabled }}
        - name: filebeat
          image: "{{ .Values.server.filebeat.image.repository }}:{{ .Values.server.filebeat.image.tag }}"
          imagePullPolicy: {{ .Values.server.filebeat.image.pullPolicy }}
          env:
            - name: ELASTICSEARCH_HOSTS
              value: {{ .Values.server.filebeat.elasticsearch | quote }}
          volumeMounts:
          - name: audit-pv
            mountPath: /usr/share/filebeat/input/
          - name: filebeat-pv
            mountPath: /usr/share/filebeat/data/
          - name: filebeat-config-volume
            mountPath: /usr/share/filebeat/filebeat.yml
            subPath: filebeat.yml
      {{- end }}
      volumes:
      - name: audit-pv
        persistentVolumeClaim:
          claimName: audit-pvc
      {{- if .Values.server.filebeat.enabled }}
      - name: filebeat-pv
        persistentVolumeClaim:
          claimName: filebeat-pvc
      - name: filebeat-config-volume
        configMap:
          name: filebeat-config
      {{- end}}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
